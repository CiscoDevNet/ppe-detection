apiVersion: apps/v1
kind: Deployment
metadata:
  name: ppe-demo
  labels:
    app: ppe-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ppe-demo
  template:
    metadata:
      labels:
        app: ppe-demo
    spec:
      containers:
        - name: ppe-demo
          image: containers.cisco.com/cocreate/ppe-inference-client
          imagePullPolicy: Never
          workingDir: /opt/ppe
          securityContext:
            privileged: true # use privileged before device plugin is ready
          command:
            [
              "python3",
              "video_demo.py",
              "--model_dir=./model",
              "--video_file_name=/dev/video1",
              "--show_video_window=1",
              "--camera_id=camera1",
            ]
          # command: ["python3", "/opt/ppe/video_demo.py", "--model_dir=/opt/ppe/model", "--video_file_name=/dev/video1", "--show_video_window=1", "--camera_id=camera01"]
          env:
            - name: DISPLAY
              value: "10.140.42.164:0"
              # value: :0
            - name: PPE_DISPLAY_FULL_SCREEN
              value: "false"
            - name: PPE_MESSAGE_SEND_INTERVAL
              value: "10000"
            - name: PPE_OBJECT_CONFIDENCE_THRESHOLD
              value: "0.5"
            - name: PPE_CAPTURE_IMAGE_WIDTH
              value: "640"
            - name: PPE_CAPTURE_IMAGE_HEIGHT
              value: "480"
            - name: PPE_DISPLAY_WINDOW_WIDTH
              value: "640"
            - name: PPE_DISPLAY_WINDOW_HEIGHT
              value: "480"
            - name: PPE_DETECTION_URL
              value: "http://ppe-demo.devnetcloud.com/v1/detections"
          volumeMounts:
            - name: x11
              mountPath: /tmp/.X11-unix
            - name: tegra
              mountPath: /usr/lib/aarch64-linux-gnu/tegra
            - name: model
              mountPath: /opt/ppe/model
              # mountPath: /home/nvidia/coliu/PPE_Inference/model
      volumes:
        - name: x11
          hostPath:
            path: /tmp/.X11-unix
        - name: tegra
          hostPath:
            path: /usr/lib/aarch64-linux-gnu/tegra
        - name: model
          hostPath:
            path: /opt/ppe/model
          # docker run --name exe-ppe-self \
          # --privileged \
          # --device=/dev/nvhost-ctrl \
          # --device=/dev/nvhost-ctrl-gpu \
          # --device=/dev/nvhost-prof-gpu \
          # --device=/dev/nvmap \
          # --device=/dev/nvhost-gpu \
          # --device=/dev/nvhost-vic \
          # --device=/dev/nvhost-as-gpu \
          # -v /usr/lib/aarch64-linux-gnu/tegra:/usr/lib/aarch64-linux-gnu/tegra \
          # -v `pwd`/model:/opt/ppe/model \
          # --device=/dev/video1 \
          # -e "DISPLAY=10.140.42.164:0" \
          # -e "PPE_CAPTURE_IMAGE_WIDTH=640" \
          # -e "PPE_CAPTURE_IMAGE_HEIGHT=480" \
          # -e "PPE_DISPLAY_FULL_SCREEN=''" \
          # -e "PPE_DISPLAY_WINDOW_WIDTH=640" \
          # -e "PPE_DISPLAY_WINDOW_HEIGHT=480" \
          # -v /tmp/.X11-unix:/tmp/.X11-unix \
          # -it ppe-client python3 video_demo.py --model_dir=./model  --video_file_name=/dev/video1 --show_video_window=1 --camera_id=camera001
